/*
 *     This file is part of NetGuard.
 *     NetGuard is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *     NetGuard is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *     You should have received a copy of the GNU General Public License
 *     along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
 *     Copyright 2015-2019 by Marcel Bokhorst (M66B)
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def versionMajor = 1
def versionMinor = 1
def versionPatch = 1

android {
    compileSdkVersion = 32

    defaultConfig {
        applicationId = "com.fulldive.extension.dataguard"
        versionName = "2.296"
        minSdkVersion 22
        targetSdkVersion 32
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        archivesBaseName = "DataGuard-v$versionName"

        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_PLATFORM=android-22"
                // https://developer.android.com/ndk/guides/cmake.html
            }
        }

        ndkVersion "21.4.7075529"
        ndk {
            // https://developer.android.com/ndk/guides/abis.html#sa
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    signingConfigs {
        release {
            storeFile file('../keys/keys.jks')
            storePassword System.getenv("FULLDIVE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("FULLDIVE_ALIAS")
            keyPassword System.getenv("FULLDIVE_ALIAS_PASSWORD")
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFileName = "DataGuard-v${android.defaultConfig.versionName}-${variant.buildType.name}.apk"
                }
            }
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            proguardFiles.add(file('proguard-rules.pro'))
            signingConfig signingConfigs.release
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            buildConfigField "String", "HOSTS_FILE_URI", "\"\""
            buildConfigField "String", "GITHUB_LATEST_API", "\"\""
        }
        play {
            minifyEnabled = true
            signingConfig signingConfigs.release
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "true"
            buildConfigField "String", "HOSTS_FILE_URI", "\"\""
            buildConfigField "String", "GITHUB_LATEST_API", "\"\""
        }
        debug {
            minifyEnabled = true
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            buildConfigField "String", "HOSTS_FILE_URI", "\"https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts\""
            buildConfigField "String", "GITHUB_LATEST_API", "\"https://api.github.com/repos/M66B/NetGuard/releases/latest\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.fulldive:popups:1.0.4'
    // https://developer.android.com/jetpack/androidx/releases/
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    annotationProcessor 'androidx.annotation:annotation:1.2.0'

    // https://bumptech.github.io/glide/
    implementation('com.github.bumptech.glide:glide:4.11.0') {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation("com.squareup.okhttp3:okhttp:4.9.1")

    implementation "androidx.constraintlayout:constraintlayout:2.1.0"
}
repositories {
    mavenCentral()
}
